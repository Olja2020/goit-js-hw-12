{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["const imagesGallery = document.querySelector('.gallery');\nconst form = document.querySelector('.form');\n\nexport function renderUsers(images) {\n  form.reset();\n\n  const markup = images\n    .map(image => {\n      return `<div class=\"card\">\n        <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n            <img class=\"gallery-image\" src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n          </a>\n          <ul class=\"list\">\n            <li class=\"item\">Likes: <span>${image.likes}</span></li>\n            <li class=\"item\">Views: <span>${image.views}</span></li>\n            <li class=\"item\">Comments: <span>${image.comments}</span></li>\n            <li class=\"item\">Downloads: <span>${image.downloads}</span></li>\n          </ul>\n          </div>`;\n    })\n    .join('');\n\n  imagesGallery.innerHTML = markup;\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n","//const { default: iziToast } = require('izitoast');\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\nimport axios from 'axios';\n// Controls the group number\n let page = 1;\n// Controls the number of items in the group\nlet per_page = 15;\nconst totalPages = Math.ceil(100 / per_page);\n\nconst button = document.querySelector('button');\nconst inputSearch = document.querySelector('.search');\nconst loader = document.querySelector('.loader');\nimport { renderUsers } from './render-functions';\n\nexport async function fetchImages() {\n  let inputSearchValue = inputSearch.value;\n  const url = `https://pixabay.com/api/?key=42766573-a347fa67a5b7233d1286bfaa7&q=${inputSearchValue}&image_type=photo&orientation=horizontal&safesearch=true&per_page=15&page=${page}`;\n  {\n      const params = new URLSearchParams({\n        per_page,\n        page\n      });\n\n  if (inputSearchValue) {\n    \n      try{\n        const response =  await axios.get(url);\n      return response.data;\n      }\n      \n        // .then(response => {\n          \n        // return response.json();\n        // })\n      \n      //   .then(data => {\n      //     if (response.data.hits.length === 0) {\n      //       iziToast.error({\n      //         title: '',\n      //         message:\n      //           'Sorry, there are no images matching your search query. Please try again!',\n      //       });\n      //     } else {\n      //       const imagesData = {\n      //         totalHits: data.totalHits,\n      //         total: data.total,\n      //         images: data.hits,\n      //       };\n      //       renderUsers(response.data.hits);\n      //     }\n      // })\n      \n        catch(error) {\n          console.log(error);\n        };\n       \n  \n  }\n  }}\n\n\n\n// const fetchPostsBtn = document.querySelector(\".btn\");\n// const postList = document.querySelector(\".posts\");\n\n// // Controls the group number\n// let page = 1;\n// // Controls the number of items in the group\n// let limit = 40;\n// // In our case total number of pages is calculated on frontend\n// const totalPages = Math.ceil(100 / limit);\n\n// fetchPostsBtn.addEventListener(\"click\", async () => {\n//   // Check the end of the collection to display an alert\n//   if (page > totalPages) {\n//     return iziToast.error({\n//       position: \"topRight\",\n//       message: \"We're sorry, there are no more posts to load\"\n//     });\n//   }\n\n//   try {\n//     const posts = await fetchPosts();\n//     renderPosts(posts);\n//     // Increase the group number\n//     page += 1;\n\n//     // Replace button text after first request\n//     if (page > 1) {\n//       fetchPostsBtn.textContent = \"Fetch more posts\";\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// });\n\n// async function fetchPosts() {\n//   const params = new URLSearchParams({\n//     _limit: limit,\n//     _page: page\n//   });\n\n//   const response = await axios.get(\n//     `https://jsonplaceholder.typicode.com/posts?${params}`\n//   );\n//   return response.data;\n// }\n\n// function renderPosts(posts) {\n//   const markup = posts\n//     .map(({ id, title, body, userId }) => {\n//       return `<li>\n//           <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n//           <p><b>Post id</b>: ${id}</p>\n//           <p><b>Author id</b>: ${userId}</p>\n//           <p class=\"post-body\">${body}</p>\n//         </li>`;\n//     })\n//     .join(\"\");\n//   postList.insertAdjacentHTML(\"beforeend\", markup);\n// }\n// ********************************\n// export async function fetchImages() {\n//   let inputSearchValue = inputSearch.value;\n//   const url = https://pixabay.com/api/?key=42766573-a347fa67a5b7233d1286bfaa7&q=${inputSearchValue}&image_type=photo&orientation=horizontal&safesearch=true;\n\n//   if (inputSearchValue) {\n//     setTimeout(() => {\n//       axios.get(url)\n//         .then(response => {\n//           return response.data;\n//         })\n//         .then(data => {\n//           if (data.hits.length === 0) {\n//             iziToast.error({\n//               title: '',\n//               message: 'Sorry, there are no images matching your search query. Please try again!',\n//             });\n//           } else {\n//             const imagesData = {\n//               totalHits: data.totalHits,\n//               total: data.total,\n//               images: data.hits,\n//             };\n//             renderUsers(data.hits);\n//           }\n//         })\n//         .catch(error => {\n//           console.log(error);\n//         })\n//         .finally(() => {\n//           loader.style.display = 'none';\n//         });\n//     }, 1000);\n//   }\n// }","// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n// Описаний у документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { fetchImages } from './js/pixabay-api';\n\nconst button = document.querySelector('button');\nconst inputSearch = document.querySelector('.search');\nconst imagesGallery = document.querySelector('.gallery');\nconst form = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\nconst loadMore = document.querySelector(\".load\");\nlet page = 1;\n// Controls the number of items in the group\nlet per_page = 15;\nconst totalPages = Math.ceil(100 / limit);\n\nconst gallery = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n  captionsData: 'alt',\n});\n\nconst submitSearchImages = form.addEventListener('submit', async function (e) {\n  e.preventDefault();\n\n  loader.style.display = 'flex';\n  imagesGallery.innerHTML = '';\n  if (page > totalPages) {\n        return iziToast.error({\n          position: \"topRight\",\n          message: \"We're sorry, but you've reached the end of search results.\"\n        });\n      }\n  try {\n   await fetchImages();\n    \n  }\n  \n  catch (error) {\n    iziToast.error({\n      color: 'red',\n      message: `:x: Sorry, there was a mistake. Please try again!`,\n      position: 'topRight',\n    });\n  }\n\n  form.reset();\n});\n\nconst loadMoreImages = form.addEventListener('submit', async function (e) {\n  e.preventDefault();\n\n  loader.style.display = 'flex';\n  \n  try {\n   await fetchImages();\n   \n    page += 1;\n    if (page > 1) {\n      //fetchPostsBtn.textContent = \"Fetch more images\";\n     }\n  }\n  \n  catch (error) {\n    iziToast.error({\n      color: 'red',\n      message: `:x: Sorry, there was a mistake. Please try again!`,\n      position: 'topRight',\n    });\n  }\n\n  form.reset();\n});\n"],"names":["page","per_page","inputSearch","fetchImages","inputSearchValue","url","axios","error","imagesGallery","form","loader","totalPages","SimpleLightbox","e","iziToast"],"mappings":"owBAAsB,SAAS,cAAc,UAAU,EAC1C,SAAS,cAAc,OAAO,ECK1C,IAAIA,EAAO,EAERC,EAAW,GAGA,SAAS,cAAc,QAAQ,EAC9C,MAAMC,EAAc,SAAS,cAAc,SAAS,EACrC,SAAS,cAAc,SAAS,EAGxC,eAAeC,GAAc,CAClC,IAAIC,EAAmBF,EAAY,MACnC,MAAMG,EAAM,qEAAqED,CAAgB,6EAA6EJ,CAAI,GAOlL,GALmB,IAAI,gBAAgB,CACjC,SAAAC,EACR,KAAQD,CACR,CAAO,EAEDI,EAEA,GAAG,CAEH,OADoB,MAAME,EAAM,IAAID,CAAG,GACvB,IACf,OAwBOE,EAAO,CACX,QAAQ,IAAIA,CAAK,CAE3B,CAGG,CCjDY,SAAS,cAAc,QAAQ,EAC1B,SAAS,cAAc,SAAS,EACpD,MAAMC,EAAgB,SAAS,cAAc,UAAU,EACjDC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAS,SAAS,cAAc,SAAS,EAC9B,SAAS,cAAc,OAAO,EAC/C,IAAIV,EAAO,EAGX,MAAMW,EAAa,KAAK,KAAK,IAAM,KAAK,EAExB,IAAIC,EAAe,aAAc,CAC/C,aAAc,IACd,aAAc,KAChB,CAAC,EAE0BH,EAAK,iBAAiB,SAAU,eAAgBI,EAAG,CAK5E,GAJAA,EAAE,eAAc,EAEhBH,EAAO,MAAM,QAAU,OACvBF,EAAc,UAAY,GACtBR,EAAOW,EACL,OAAOG,EAAS,MAAM,CACpB,SAAU,WACV,QAAS,4DACnB,CAAS,EAEP,GAAI,CACH,MAAMX,EAAW,CAEjB,MAEa,CACZW,EAAS,MAAM,CACb,MAAO,MACP,QAAS,oDACT,SAAU,UAChB,CAAK,CACF,CAEDL,EAAK,MAAK,CACZ,CAAC,EAEsBA,EAAK,iBAAiB,SAAU,eAAgBI,EAAG,CACxEA,EAAE,eAAc,EAEhBH,EAAO,MAAM,QAAU,OAEvB,GAAI,CACH,MAAMP,EAAW,EAEhBH,GAAQ,EACJA,EAAO,CAGZ,MAEa,CACZc,EAAS,MAAM,CACb,MAAO,MACP,QAAS,oDACT,SAAU,UAChB,CAAK,CACF,CAEDL,EAAK,MAAK,CACZ,CAAC"}